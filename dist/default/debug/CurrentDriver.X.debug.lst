

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 27 00:02:10 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F676 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   118                           ADRESH equ 01Eh ;# 
   119  001E                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   120                           ADCON0 equ 01Fh ;# 
   121  001F                     # 656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   122                           OPTION_REG equ 081h ;# 
   123  0081                     # 733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   124                           TRISA equ 085h ;# 
   125  0085                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   126                           TRISC equ 087h ;# 
   127  0087                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   128                           PIE1 equ 08Ch ;# 
   129  008C                     # 881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   130                           PCON equ 08Eh ;# 
   131  008E                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   132                           OSCCAL equ 090h ;# 
   133  0090                     # 975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   134                           ANSEL equ 091h ;# 
   135  0091                     # 1037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   136                           WPUA equ 095h ;# 
   137  0095                     # 1042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   138                           WPU equ 095h ;# 
   139  0095                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   140                           IOCA equ 096h ;# 
   141  0096                     # 1130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   142                           IOC equ 096h ;# 
   143  0096                     # 1223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   144                           VRCON equ 099h ;# 
   145  0099                     # 1283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   146                           EEDAT equ 09Ah ;# 
   147  009A                     # 1288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   148                           EEDATA equ 09Ah ;# 
   149  009A                     # 1321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   150                           EEADR equ 09Bh ;# 
   151  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   152                           EECON1 equ 09Ch ;# 
   153  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   154                           EECON2 equ 09Dh ;# 
   155  009D                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   156                           ADRESL equ 09Eh ;# 
   157  009E                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   158                           ADCON1 equ 09Fh ;# 
   159  009F                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   160                           INDF equ 00h ;# 
   161  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   162                           TMR0 equ 01h ;# 
   163  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   164                           PCL equ 02h ;# 
   165  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   166                           STATUS equ 03h ;# 
   167  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   168                           FSR equ 04h ;# 
   169  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   170                           PORTA equ 05h ;# 
   171  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   172                           PORTC equ 07h ;# 
   173  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   174                           PCLATH equ 0Ah ;# 
   175  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   176                           INTCON equ 0Bh ;# 
   177  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   178                           PIR1 equ 0Ch ;# 
   179  000C                     # 414 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   180                           TMR1 equ 0Eh ;# 
   181  000E                     # 421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   182                           TMR1L equ 0Eh ;# 
   183  000E                     # 428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   184                           TMR1H equ 0Fh ;# 
   185  000F                     # 435 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   186                           T1CON equ 010h ;# 
   187  0010                     # 500 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   188                           CMCON equ 019h ;# 
   189  0019                     # 559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   190                           ADRESH equ 01Eh ;# 
   191  001E                     # 566 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   192                           ADCON0 equ 01Fh ;# 
   193  001F                     # 656 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   194                           OPTION_REG equ 081h ;# 
   195  0081                     # 733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   196                           TRISA equ 085h ;# 
   197  0085                     # 783 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   198                           TRISC equ 087h ;# 
   199  0087                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   200                           PIE1 equ 08Ch ;# 
   201  008C                     # 881 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   202                           PCON equ 08Eh ;# 
   203  008E                     # 915 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   204                           OSCCAL equ 090h ;# 
   205  0090                     # 975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   206                           ANSEL equ 091h ;# 
   207  0091                     # 1037 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   208                           WPUA equ 095h ;# 
   209  0095                     # 1042 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   210                           WPU equ 095h ;# 
   211  0095                     # 1125 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   212                           IOCA equ 096h ;# 
   213  0096                     # 1130 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   214                           IOC equ 096h ;# 
   215  0096                     # 1223 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   216                           VRCON equ 099h ;# 
   217  0099                     # 1283 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   218                           EEDAT equ 09Ah ;# 
   219  009A                     # 1288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   220                           EEDATA equ 09Ah ;# 
   221  009A                     # 1321 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   222                           EEADR equ 09Bh ;# 
   223  009B                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   224                           EECON1 equ 09Ch ;# 
   225  009C                     # 1366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   226                           EECON2 equ 09Dh ;# 
   227  009D                     # 1373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   228                           ADRESL equ 09Eh ;# 
   229  009E                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f676.h"
   230                           ADCON1 equ 09Fh ;# 
   231  009F                     	FNROOT	_main
   232                           	FNCALL	intlevel1,_myint
   233                           	global	intlevel1
   234                           	FNROOT	intlevel1
   235                           	global	_wVoltageRead
   236                           	global	_ADRESH
   237                           _ADRESH	set	0x1E
   238  001E                     	global	_PIR1bits
   239                           _PIR1bits	set	0xC
   240  000C                     	global	_PORTCbits
   241                           _PORTCbits	set	0x7
   242  0007                     	global	_ADCON0bits
   243                           _ADCON0bits	set	0x1F
   244  001F                     	global	_PORTC
   245                           _PORTC	set	0x7
   246  0007                     	global	_INTCONbits
   247                           _INTCONbits	set	0xB
   248  000B                     	global	_PIE1bits
   249                           _PIE1bits	set	0x8C
   250  008C                     	global	_ANSELbits
   251                           _ANSELbits	set	0x91
   252  0091                     	global	_ANSEL
   253                           _ANSEL	set	0x91
   254  0091                     	global	_ADCON1bits
   255                           _ADCON1bits	set	0x9F
   256  009F                     	global	_TRISCbits
   257                           _TRISCbits	set	0x87
   258  0087                     	global	_TRISC
   259                           _TRISC	set	0x87
   260  0087                     ; #config settings
   261                           global __CFG_FOSC$
   262                           __CFG_FOSC$ equ 0x4
   263  0004                     global __CFG_WDTE$
   264                           __CFG_WDTE$ equ 0x0
   265  0000                     global __CFG_PWRTE$
   266                           __CFG_PWRTE$ equ 0x1
   267  0001                     global __CFG_MCLRE$
   268                           __CFG_MCLRE$ equ 0x0
   269  0000                     global __CFG_BOREN$
   270                           __CFG_BOREN$ equ 0x0
   271  0000                     global __CFG_CP$
   272                           __CFG_CP$ equ 0x1
   273  0001                     global __CFG_CPD$
   274                           __CFG_CPD$ equ 0x1
   275  0001                     	file	"C:\Users\dell\AppData\Local\Temp\s68o."
   276                           	line	#
   277                           psect cinit,class=CODE,delta=2
   278                           global start_initialization
   279                           start_initialization:
   280  000C                     
   281                           global __initialization
   282                           __initialization:
   283  000C                     psect	bssBANK0,class=BANK0,space=1,noexec
   284                           global __pbssBANK0
   285                           __pbssBANK0:
   286  0025                     _wVoltageRead:
   287  0025                            ds      1
   288  0025                     
   289                           	file	"C:\Users\dell\AppData\Local\Temp\s68o."
   290                           	line	#
   291                           ; Clear objects allocated to BANK0
   292                           psect cinit,class=CODE,delta=2,merge=1
   293                           	bcf	status, 5	;RP0=0, select bank0
   294  000C  1283               	clrf	((__pbssBANK0)+0)&07Fh
   295  000D  01A5               psect cinit,class=CODE,delta=2,merge=1
   296                           global end_of_initialization,__end_of__initialization
   297                           
   298                           ;End of C runtime variable initialization code
   299                           
   300                           end_of_initialization:
   301  000E                     __end_of__initialization:
   302  000E                     clrf status
   303  000E  0183               ljmp _main	;jump to C main() function
   304  000F  2810               psect	cstackBANK0,class=BANK0,space=1,noexec
   305                           global __pcstackBANK0
   306                           __pcstackBANK0:
   307  0020                     ?_main:	; 1 bytes @ 0x0
   308  0020                     ?_myint:	; 1 bytes @ 0x0
   309  0020                     ??_myint:	; 1 bytes @ 0x0
   310  0020                     	ds	3
   311  0020                     ??_main:	; 1 bytes @ 0x3
   312  0023                     	ds	1
   313  0023                     	global	main@wVref
   314                           main@wVref:	; 1 bytes @ 0x4
   315  0024                     	ds	1
   316  0024                     ;!
   317                           ;!Data Sizes:
   318                           ;!    Strings     0
   319                           ;!    Constant    0
   320                           ;!    Data        0
   321                           ;!    BSS         1
   322                           ;!    Persistent  0
   323                           ;!    Stack       0
   324                           ;!
   325                           ;!Auto Spaces:
   326                           ;!    Space          Size  Autos    Used
   327                           ;!    COMMON            0      0       0
   328                           ;!    BANK0            62      5       6
   329                           
   330                           ;!
   331                           ;!Pointer List with Targets:
   332                           ;!
   333                           ;!    None.
   334                           
   335                           
   336                           ;!
   337                           ;!Critical Paths under _main in COMMON
   338                           ;!
   339                           ;!    None.
   340                           ;!
   341                           ;!Critical Paths under _myint in COMMON
   342                           ;!
   343                           ;!    None.
   344                           ;!
   345                           ;!Critical Paths under _main in BANK0
   346                           ;!
   347                           ;!    None.
   348                           ;!
   349                           ;!Critical Paths under _myint in BANK0
   350                           ;!
   351                           ;!    None.
   352                           
   353 ;;
   354 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   355 ;;
   356                           
   357                           ;!
   358                           ;!Call Graph Tables:
   359                           ;!
   360                           ;! ---------------------------------------------------------------------------------
   361                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   362                           ;! ---------------------------------------------------------------------------------
   363                           ;! (0) _main                                                 2     2      0      23
   364                           ;!                                              3 BANK0      2     2      0
   365                           ;! ---------------------------------------------------------------------------------
   366                           ;! Estimated maximum stack depth 0
   367                           ;! ---------------------------------------------------------------------------------
   368                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   369                           ;! ---------------------------------------------------------------------------------
   370                           ;! (1) _myint                                                3     3      0       0
   371                           ;!                                              0 BANK0      3     3      0
   372                           ;! ---------------------------------------------------------------------------------
   373                           ;! Estimated maximum stack depth 1
   374                           ;! ---------------------------------------------------------------------------------
   375                           ;!
   376                           ;! Call Graph Graphs:
   377                           ;!
   378                           ;! _main (ROOT)
   379                           ;!
   380                           ;! _myint (ROOT)
   381                           ;!
   382                           
   383                           ;! Address spaces:
   384                           
   385                           ;!Name               Size   Autos  Total    Cost      Usage
   386                           ;!BITCOMMON            0      0       0       0        0.0%
   387                           ;!EEDATA              80      0       0       0        0.0%
   388                           ;!NULL                 0      0       0       0        0.0%
   389                           ;!CODE                 0      0       0       0        0.0%
   390                           ;!BITSFR0              0      0       0       1        0.0%
   391                           ;!SFR0                 0      0       0       1        0.0%
   392                           ;!COMMON               0      0       0       1        0.0%
   393                           ;!BITSFR1              0      0       0       2        0.0%
   394                           ;!SFR1                 0      0       0       2        0.0%
   395                           ;!STACK                0      0       0       2        0.0%
   396                           ;!BITBANK0            3E      0       0       3        0.0%
   397                           ;!BANK0               3E      5       6       4        9.7%
   398                           ;!ABS                  0      0       6       5        0.0%
   399                           ;!DATA                 0      0       6       6        0.0%
   400                           
   401                           	global	_main
   402                           
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 29 in file "CurrentDriver.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  wVref           1    4[BANK0 ] unsigned char 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0
   419 ;;      Params:         0       0
   420 ;;      Locals:         0       1
   421 ;;      Temps:          0       1
   422 ;;      Totals:         0       2
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels required when called:    1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   432                           	file	"CurrentDriver.c"
   433                           	line	29
   434                           global __pmaintext
   435                           __pmaintext:	;psect for function _main
   436  0010                     psect	maintext
   437                           	file	"CurrentDriver.c"
   438                           	line	29
   439                           	global	__size_of_main
   440                           	__size_of_main	equ	__end_of_main-_main
   441  002A                     	
   442                           _main:	
   443  0010                     ;incstack = 0
   444                           	opt	stack 7
   445                           ; Regs used in _main: [wreg+status,2+status,0]
   446                           	line	31
   447                           	
   448                           l663:	
   449  0010                     ;CurrentDriver.c: 31:         if(wVoltageRead > wVref)
   450                           	bcf	(11),7	;volatile
   451  0010  138B               	line	33
   452                           	
   453                           l665:	
   454  0011                     ;CurrentDriver.c: 33:             PORTCbits.RC5 = 0;
   455                           	movlw	low(0Fh)
   456  0011  300F               	bcf	status, 5	;RP0=0, select bank0
   457  0012  1283               	movwf	(??_main+0)+0
   458  0013  00A3               	movf	(??_main+0)+0,w
   459  0014  0823               	movwf	(main@wVref)
   460  0015  00A4               	line	35
   461                           	
   462                           l667:	
   463  0016                     ;CurrentDriver.c: 35:         else
   464                           	clrf	(7)	;volatile
   465  0016  0187               	line	36
   466                           	
   467                           l669:	
   468  0017                     ;CurrentDriver.c: 36:         {
   469                           	bsf	status, 5	;RP0=1, select bank1
   470  0017  1683               	clrf	(135)^080h	;volatile
   471  0018  0187               	line	37
   472                           	
   473                           l671:	
   474  0019                     ;CurrentDriver.c: 37:             PORTCbits.RC5 = 1;
   475                           	bsf	(135)^080h,5	;volatile
   476  0019  1687               	line	38
   477                           	
   478                           l673:	
   479  001A                     ;CurrentDriver.c: 38:         }
   480                           	bcf	status, 5	;RP0=0, select bank0
   481  001A  1283               	bcf	(31),2	;volatile
   482  001B  111F               	line	39
   483                           	
   484                           l675:	
   485  001C                     ;CurrentDriver.c: 39:     }
   486                           	bcf	(31),3	;volatile
   487  001C  119F               	line	40
   488                           	
   489                           l677:	
   490  001D                     ;CurrentDriver.c: 40: 
   491                           	bsf	(31),4	;volatile
   492  001D  161F               	line	41
   493                           	
   494                           l679:	
   495  001E                     ;CurrentDriver.c: 41:     return;
   496                           	bcf	(31),7	;volatile
   497  001E  139F               	line	42
   498                           	
   499                           l681:	
   500  001F                     ;CurrentDriver.c: 42: }
   501                           	movlw	((0 & ((1<<3)-1))<<4)|not (((1<<3)-1)<<4)
   502  001F  308F               	bsf	status, 5	;RP0=1, select bank1
   503  0020  1683               	andwf	(159)^080h,f	;volatile
   504  0021  059F               	line	43
   505                           	
   506                           l683:	
   507  0022                     ;CurrentDriver.c: 43: 
   508                           	bcf	status, 5	;RP0=0, select bank0
   509  0022  1283               	bsf	(31),0	;volatile
   510  0023  141F               	line	45
   511                           	
   512                           l685:	
   513  0024                     ;CurrentDriver.c: 45: {
   514                           	bsf	status, 5	;RP0=1, select bank1
   515  0024  1683               	clrf	(145)^080h	;volatile
   516  0025  0191               	line	46
   517                           	
   518                           l687:	
   519  0026                     ;CurrentDriver.c: 46:     if (PIR1bits.ADIF == 1)
   520                           	bsf	(145)^080h,4	;volatile
   521  0026  1611               	line	48
   522                           	
   523                           l689:	
   524  0027                     ;CurrentDriver.c: 48:         PIR1bits.ADIF = 0;
   525                           	bsf	(140)^080h,6	;volatile
   526  0027  170C               	line	49
   527                           	
   528                           l691:	
   529  0028                     ;CurrentDriver.c: 49:         wVoltageRead = ADRESH;
   530                           	bsf	(11),6	;volatile
   531  0028  170B               	line	50
   532                           	
   533                           l693:	
   534  0029                     ;CurrentDriver.c: 50:         PIR1bits.TMR1IF = 0;
   535                           	bsf	(11),7	;volatile
   536  0029  178B               	line	53
   537                           	
   538                           l695:	
   539  002A                     ;CurrentDriver.c: 53: }
   540                           	bcf	status, 5	;RP0=0, select bank0
   541  002A  1283               	bsf	(31),1	;volatile
   542  002B  149F               	goto	l697
   543  002C  282D               	line	55
   544                           	
   545                           l31:	
   546  002D                     	line	57
   547                           	
   548                           l697:	
   549  002D                     	movf	(_wVoltageRead),w
   550  002D  0825               	subwf	(main@wVref),w
   551  002E  0224               	skipnc
   552  002F  1803               	goto	u31
   553  0030  2832               	goto	u30
   554  0031  2833               u31:
   555  0032                     	goto	l32
   556  0032  2835               u30:
   557  0033                     	line	59
   558                           	
   559                           l699:	
   560  0033                     	bcf	(7),5	;volatile
   561  0033  1287               	line	60
   562                           	goto	l697
   563  0034  282D               	line	61
   564                           	
   565                           l32:	
   566  0035                     	line	63
   567                           	bsf	(7),5	;volatile
   568  0035  1687               	goto	l697
   569  0036  282D               	line	64
   570                           	
   571                           l33:	
   572  0037                     	goto	l697
   573  0037  282D               	line	65
   574                           	
   575                           l34:	
   576  0038                     	goto	l697
   577  0038  282D               	
   578                           l35:	
   579  0039                     	line	68
   580                           	
   581                           l36:	
   582  0039                     	global	start
   583                           	ljmp	start
   584  0039  280B               	opt stack 0
   585                           GLOBAL	__end_of_main
   586                           	__end_of_main:
   587  003A                     	signat	_main,89
   588                           	global	_myint
   589                           
   590 ;; *************** function _myint *****************
   591 ;; Defined at:
   592 ;;		line 70 in file "CurrentDriver.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0
   606 ;;      Params:         0       0
   607 ;;      Locals:         0       0
   608 ;;      Temps:          0       3
   609 ;;      Totals:         0       3
   610 ;;Total ram usage:        3 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		Interrupt level 1
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   619                           	line	70
   620                           global __ptext1
   621                           __ptext1:	;psect for function _myint
   622  003A                     psect	text1
   623                           	file	"CurrentDriver.c"
   624                           	line	70
   625                           	global	__size_of_myint
   626                           	__size_of_myint	equ	__end_of_myint-_myint
   627  0013                     	
   628                           _myint:	
   629  003A                     ;incstack = 0
   630                           	opt	stack 7
   631                           ; Regs used in _myint: [wreg]
   632                           psect	intentry,class=CODE,delta=2
   633                           global __pintentry
   634                           __pintentry:
   635  0004                     global interrupt_function
   636                           interrupt_function:
   637  0004                     	global saved_w
   638                           	saved_w	set	btemp+0
   639  005E                     	movwf	saved_w
   640  0004  00DE               	swapf	status,w
   641  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
   642  0006  1283               	movwf	(??_myint+1)
   643  0007  00A1               	movf	pclath,w
   644  0008  080A               	movwf	(??_myint+2)
   645  0009  00A2               	ljmp	_myint
   646  000A  283A               psect	text1
   647                           	line	72
   648                           	
   649                           i1l701:	
   650  003A                     	btfss	(12),6	;volatile
   651  003A  1F0C               	goto	u4_21
   652  003B  283D               	goto	u4_20
   653  003C  283E               u4_21:
   654  003D                     	goto	i1l42
   655  003D  2846               u4_20:
   656  003E                     	line	74
   657                           	
   658                           i1l703:	
   659  003E                     	bcf	(12),6	;volatile
   660  003E  130C               	line	75
   661                           	
   662                           i1l705:	
   663  003F                     	movf	(30),w	;volatile
   664  003F  081E               	movwf	(??_myint+0)+0
   665  0040  00A0               	movf	(??_myint+0)+0,w
   666  0041  0820               	movwf	(_wVoltageRead)
   667  0042  00A5               	line	76
   668                           	
   669                           i1l707:	
   670  0043                     	bcf	(12),0	;volatile
   671  0043  100C               	line	77
   672                           	
   673                           i1l709:	
   674  0044                     	bsf	(31),1	;volatile
   675  0044  149F               	goto	i1l42
   676  0045  2846               	line	78
   677                           	
   678                           i1l41:	
   679  0046                     	line	79
   680                           	
   681                           i1l42:	
   682  0046                     	movf	(??_myint+2),w
   683  0046  0822               	movwf	pclath
   684  0047  008A               	swapf	(??_myint+1)^00h,w
   685  0048  0E21               	movwf	status
   686  0049  0083               	swapf	saved_w,f
   687  004A  0EDE               	swapf	saved_w,w
   688  004B  0E5E               	retfie
   689  004C  0009               	opt stack 0
   690                           GLOBAL	__end_of_myint
   691                           	__end_of_myint:
   692  004D                     	signat	_myint,89
   693                           global	___latbits
   694                           ___latbits	equ	0
   695  0000                     	global	btemp
   696                           	btemp set 05Eh
   697  005E                     
   698                           	DABS	1,94,2	;btemp
   699                           	global	wtemp0
   700                           	wtemp0 set btemp+0
   701  005E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      5       6

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myint in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myint in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      23
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myint                                                3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myint (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      5       6       4        9.7%
ABS                  0      0       6       5        0.0%
DATA                 0      0       6       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 27 00:02:10 2020

             __CFG_FOSC$ 0004                       l31 002D               __CFG_WDTE$ 0000  
                     l32 0035                       l33 0037                       l34 0038  
                     l35 0039                       l36 0039                       u30 0033  
                     u31 0032              __CFG_BOREN$ 0000              __CFG_MCLRE$ 0000  
                    l671 0019                      l663 0010                      l681 001F  
                    l673 001A                      l665 0011                      l691 0028  
                    l683 0022                      l675 001C                      l667 0016  
                    l693 0029                      l685 0024                      l677 001D  
                    l669 0017                      l695 002A                      l687 0026  
                    l679 001E                      l697 002D                      l689 0027  
                    l699 0033              __CFG_PWRTE$ 0001                     i1l41 0046  
                   i1l42 0046                     u4_20 003E                     u4_21 003D  
                   _main 0010                     btemp 005E                     start 000B  
                  ?_main 0020                    _ANSEL 0091                    i1l701 003A  
                  i1l703 003E                    i1l705 003F                    i1l707 0043  
                  i1l709 0044                    _PORTC 0007                    _TRISC 0087  
                  _myint 003A                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000C             __end_of_main 003A  
                 ??_main 0023                   _ADRESH 001E                   ?_myint 0020  
                 saved_w 005E  __end_of__initialization 000E            __end_of_myint 004D  
                ??_myint 0020               __pbssBANK0 0025               __pmaintext 0010  
             __pintentry 0004                _ANSELbits 0091                  __ptext1 003A  
   end_of_initialization 000E                _PORTCbits 0007                _TRISCbits 0087  
              __CFG_CPD$ 0001      start_initialization 000C                ___latbits 0000  
          __pcstackBANK0 0020           __size_of_myint 0013        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                 __CFG_CP$ 0001  
             _ADCON0bits 001F               _ADCON1bits 009F                main@wVref 0024  
           _wVoltageRead 0025            __size_of_main 002A               _INTCONbits 000B  
               intlevel1 0000  
